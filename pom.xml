<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>org.opencog</groupId>
	<artifactId>relex</artifactId>
	<packaging>jar</packaging>
	<version>1.6.3</version>
	<name>relex</name>
	<description>RelEx dependency relation extractor</description>
	<url>http://wiki.opencog.org/w/RelEx_Dependency_Relationship_Extractor</url>
	<scm>
		<url>https://github.com/opencog/relex</url>
		<connection>scm:git:git@github.com:opencog/relex.git</connection>
	</scm>
	<licenses>
		<license>
			<name>Apache License 2.0</name>
			<url>http://www.spdx.org/licenses/Apache-2.0</url>
		</license>
	</licenses>
	<developers>
		<developer>
			<name>Mike Ross</name>
			<email>mikenon@gmail.com</email>
			<roles>
				<role>in 2005</role>
			</roles>
		</developer>
		<developer>
			<name>Linas Vepstas</name>
			<email>linasvepstas@gmail.com</email>
			<url>http://linas.org/</url>
			<organization>OpenCog Foundation</organization>
			<organizationUrl>http://opencog.org/</organizationUrl>
			<roles>
				<role>as of 2008</role>
			</roles>
		</developer>
	</developers>
	<contributors>
		<contributor>
			<name>Murilo Queiroz</name>
			<email>muriloq@gmail.com</email>
		</contributor>
		<contributor>
			<name>Borislav Iordanov</name>
			<email>borislav.iordanov@gmail.com</email>
		</contributor>
		<contributor>
			<name>Evgenii Philippov</name>
			<email>efilippov@gmail.com</email>
		</contributor>
		<contributor>
			<name>Fabricio Silva</name>
			<email>fabaguiarsilva@gmail.com</email>
		</contributor>
		<contributor>
			<name>Blake Lemoine</name>
			<email>bal2277@louisiana.edu</email>
		</contributor>
		<contributor>
			<name>Rui P. Costa</name>
			<email>b4h0pe@gmail.com</email>
		</contributor>
		<contributor>
			<name>Jim White</name>
			<email>james.paul.white@gmail.com</email>
		</contributor>
		<contributor>
			<name>Rodas Solomon</name>
			<email>rodisolomon@gmail.com</email>
		</contributor>
		<contributor>
			<name>Lian Ruiting</name>
			<email>lianlian1022@gmail.com</email>
		</contributor>
		<contributor>
			<name>Jand Hashemi</name>
			<roles>
				<role>Lucky-- IRC freenode</role>
			</roles>
		</contributor>
		<contributor>
			<name>Alex van der Peet</name>
			<email>alex@yutani.nl</email>
		</contributor>
		<contributor>
			<name>David Hart</name>
			<email>dhart@opencog.org</email>
			<url>https://www.linkedin.com/in/davidhart</url>
			<organization>OpenCog Foundation</organization>
			<organizationUrl>http://opencog.org/</organizationUrl>
			<roles>
				<role>DevOps</role>
				<role>Systems Integration</role>
				<role>Artificial Intelligence</role>
				<role>Robotics</role>
				<role>Virtual Worlds</role>
			</roles>
		</contributor>
		<contributor>
			<name>Danny Brian</name>
			<email>danny@brians.org</email>
		</contributor>
		<contributor>
			<name>Hendy Irawan</name>
			<email>hendy@soluvas.com</email>
			<url>http://www.hendyirawan.com/</url>
			<organization>Soluvas</organization>
			<organizationUrl>http://www.soluvas.com/</organizationUrl>
			<timezone>Asia/Jakarta</timezone>
			<roles>
				<role>Maven, JUnit</role>
			</roles>
		</contributor>
	</contributors>
	<properties>
		<maven.compiler.source>1.8</maven.compiler.source>
		<maven.compiler.target>1.8</maven.compiler.target>
		<slf4j.version>1.7.25</slf4j.version>
		<logback.version>1.2.3</logback.version>
	</properties>
	<build>
		<sourceDirectory>${basedir}/src/java</sourceDirectory>
		<testSourceDirectory>${basedir}/src/java_test</testSourceDirectory>
		<plugins>
			<!-- mvn -DskipTests package appassembler:assemble assembly:single -->
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>appassembler-maven-plugin</artifactId>
				<version>1.8</version>
				<executions>
					<execution>
						<phase>package</phase>
						<goals>
							<goal>assemble</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<extraJvmArguments>
						-Djava.library.path=/usr/lib:/usr/lib/jni:/usr/local/lib:/usr/local/lib/jni
						-Drelex.tagalgpath=data/relex-tagging.algs
						-Drelex.semalgpath=data/relex-semantic.algs
						-Drelex.pennalgpath=data/relex-penn-tagging.algs
						-Drelex.sfalgpath=data/relex-stanford.algs
						-Dwordnet.configfile=data/wordnet/file_properties.xml
					</extraJvmArguments>
					<programs>
						<program>
							<id>relexd</id>
							<mainClass>relex.Server</mainClass>
							<jvmSettings>
								<maxMemorySize>1024m</maxMemorySize>
							</jvmSettings>
						</program>
						<program>
							<!-- This will return parsed text on the input socket. -->
							<id>relexd-relex</id>
							<mainClass>relex.Server</mainClass>
							<jvmSettings>
								<maxMemorySize>1024m</maxMemorySize>
							</jvmSettings>
							<commandLineArguments>
								<commandLineArgument>--relex</commandLineArgument>
							</commandLineArguments>
						</program>
						<program>
							<!-- Return with Link Grammar and Relex output on default port 4444. -->
							<id>relexd-link</id>
							<mainClass>relex.Server</mainClass>
							<jvmSettings>
								<maxMemorySize>1024m</maxMemorySize>
							</jvmSettings>
							<commandLineArguments>
								<commandLineArgument>--relex --link</commandLineArgument>
							</commandLineArguments>
						</program>
					</programs>
				</configuration>
			</plugin>
		</plugins>
		<resources>
			<resource>
				<targetPath>./</targetPath>
				<filtering>false</filtering>
				<directory>${basedir}/data</directory>
				<includes>
					<include>relex-penn-tagging.algs</include>
					<include>relex-semantic.algs</include>
					<include>relex-stanford.algs</include>
					<include>relex-tagging.algs</include>
				</includes>
			</resource>
			<resource>
				<targetPath>./</targetPath>
				<filtering>false</filtering>
				<directory>${basedir}/data/wordnet</directory>
				<includes>
					<include>file_properties.xml</include>
				</includes>
			</resource>
			<resource>
				<targetPath>./</targetPath>
				<filtering>false</filtering>
				<directory>${basedir}/data/sentence-detector</directory>
				<includes>
					<include>EnglishSD.bin.gz</include>
				</includes>
			</resource>
			<resource>
				<targetPath>./</targetPath>
				<filtering>false</filtering>
				<directory>${basedir}/data/opennlp/models-1.5</directory>
				<includes>
					<include>en-sent.bin</include>
				</includes>
			</resource>
			<resource>
				<targetPath>./</targetPath>
				<filtering>false</filtering>
				<directory>${basedir}/src/resources</directory>
			</resource>
		</resources>
	</build>
	<dependencies>
		<dependency>
			<groupId>org.opencog</groupId>
			<artifactId>linkgrammar</artifactId>
			<version>5.5.0</version>
		</dependency>
		<dependency>
			<groupId>net.sf.jwordnet</groupId>
			<artifactId>jwnl</artifactId>
			<version>1.4_rc3</version>
		</dependency>
		<dependency>
			<groupId>org.apache.opennlp</groupId>
			<artifactId>opennlp-tools</artifactId>
			<version>1.8.4</version>
		</dependency>
		<dependency>
			<groupId>net.sourceforge.owlapi</groupId>
			<artifactId>owlapi-distribution</artifactId>
			<version>3.5.7</version>
		</dependency>
		<!-- Logging -->
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
			<version>${slf4j.version}</version>
		</dependency>

		<dependency>
			<groupId>ch.qos.logback</groupId>
			<artifactId>logback-classic</artifactId>
			<version>${logback.version}</version>
		</dependency>

		<dependency>
			<groupId>ch.qos.logback</groupId>
			<artifactId>logback-core</artifactId>
			<version>${logback.version}</version>
		</dependency>
		<!-- Tests -->
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.11</version>
			<scope>test</scope>
		</dependency>
	</dependencies>
</project>
